= 安全マージン

//flushright{
@ariaki
//}

== はじめに

みなさんは作業工数を見積もる際に@<b>{安全マージン（バッファ）}をどの程度とっていますか？
工数を見積もる際は、まだ作業していないのに時間を予測しますから、完璧な精度で算出することは不可能ですよね。
実際の作業時間がその見積もりを超過すると、納期遅延など大きな問題に発展する可能性がありますので、私たちはそうならないよう細心の注意を払って「実工数＜見積もり工数」となるよう調整します。
見積もりの精度を上げるには、作業を細分化し、過去の実績などの経験と勘を基に算定しますが、それでも想定しきれない諸々の問題に対処するため余裕時間、「安全マージン」を積み増します。
どの程度の安全マージンを設定するかは場面によって大きく変わりますし、設定量によっては説明が難しくなる場合もあるため、難しい課題ではないでしょうか。
本章ではこの安全マージンについて私の体験談を元に解説し、とくに@<b>{締切駆動}の作業にならないためのコツを工数見積もり初心者に向けて共有します。

== 安全マージンとは

=== 安全マージンを取る理由

安全マージンは、前段のように想定外の問題によって@<b>{クリティカルパスが阻害される}可能性に対し、私たちはリスクヘッジの為に余裕時間として設定します。
まずこの安全マージンを検討する前に、阻害要因にはどのような種類があるのかを少し掘り下げましょう。

    * 未知の事象
    * 曖昧な事象
    * コミュニケーションコスト
    * その他

 : 未知の事象

何においても、「はじめて」は想定しきれない部分が多くリスクを伴いますよね。
また「はじめての顧客」についても、相手方の協力姿勢や技術理解度などを推し量る事ができないため、リスク因子となり得ます。

    * はじめての言語 / フレームワーク
    * はじめてのミドルウェア / OS / 製品
    * はじめての組み合わせ
    * はじめての顧客 など

こういった未知（はじめて）の事象に対しては、十分な余裕を持って取り組む必要があります。
たとえば、調査工数を設けたり、段階的な工数見積もりをするなどの工夫をすれば、工数の精度を上げることができるかもしれませんね。

 : 曖昧な事象

取り組む案件に曖昧な要素がある場合、それは大きなリスク要因になります。
主に、顧客（依頼側）と開発者が考えている内容に乖離がある場合に発生し得る問題で、後から作業段階で問題になる事も多いのではないでしょうか。

    * 顧客が業務を理解していない／不慣れ
    * 顧客が後から追加依頼しがち
    * 要求事項や対向仕様がゆるふわ系

その他にも「まだ決まっていない」「後で決めればいい」のように先延ばしにしがちな部分があれば、大きなリスクになりますよね。
これに対して、工数見積もり時に作業範囲を明示したり、要件定義や設計を別スケジュール（別見積もり）にするなどの工夫によって、曖昧な部分ができる限りスケジュールに影響しないよう進めたいですね。

 : コミュニケーションコスト

顧客によっては、言語や文化の違い、業務の多忙などから、日常的なコミュニケーションが困難な場合があります。
この場合には、相応のコミュニケーションコストが想定されます。
たとえば、オフショア開発チームと日本側のチームの間で日本語でのコミュニケーションが困難な場合は、何回も手戻りが発生して工数が膨れ上がるといった可能性を考慮するべきです。

    * タスクやチケットを処理してくれない
    * 言語的な障壁がある
    * 介在する人数が多い
    * 稟議が遅い　　など

こういったコミュニケーションの問題では「催促してくれなかった」「コミュニケーションを工夫してくれなかった」というように、自身に責任が転嫁されるような場合もあります。
もちろん自分自身がボールを持ち続けないことも重要ですが、関与する相手のタスクもきちんと管理できるとよりスムーズにプロジェクトが進むでしょう。

 : その他

その他にも、あなたの開発モチベーションによってもしかしたら見積もり時間が大きく変わるかもしれません。

    * なんだか体調が優れない
    * 最近モチベーションが低い
    * 報酬が安すぎてどうにもやる気が起きない
    * おもしろいゲームを購入した　　など

一部は良い解決策が思いつかないようなものですが、モチベーションをコントロールできるのはあなた自身です。
目標を小さく切り分け、仕事に集中して頑張りましょう。
後ほど「安全マージンと納期」の節でこういったモチベーションの部分について改めて触れたいと思います。

=== 受注者から見た安全マージン

これまで、受注者（エンジニア）の視点から安全マージンが必要な例を挙げました。
このマージンは@<b>{誰が誰に対して}持っておくべきものでしょうか。
企業の受託開発では一般的に「エンジニア→マネージャー→営業担当→客先担当……」のように、複数の階層があるはずです。
この節では、どの部分に安全マージンを持つべきなのかを検討します。

まず、安全マージンは@<b>{それぞれが自身の役割内で}持ち、自身の責任範囲で納期を遅延させない事を目指します。
とくに前段までに説明した通り、@<b>{他者によって影響される部分}には必ず安全マージンを想定するべきでしょう。
たとえば、以下のような状況を想像してください。
あなたは部下に製品仕様について確認させ、その回答を客先にメールで送信する必要があります。
部下より「今日中に回答します」と報告された場合、あなたはどのように判断するでしょうか？
おそらく「明日午前中に回答します」というように、少しバッファをとるはずです。
このように、複数者間でコミュニケーションを中継するような状況においては、それぞれにおいて安全マージンが追加されます。
また、関係者が多くなればなるほど、実工数に比べて安全マージンは増えていく傾向になるはずです。
コミュニケーションは大きなコストであり、決して間違いではありませんし、もし中継地点をいくつか減らせるなら、工数も減るはずです。

次に、定型作業について考えてみましょう。
ここでは確実に工数を推測できる単純作業や反復作業を想定します。
たとえば、1枚あたり60秒で処理可能な入力業務を1,000枚受注する場合、単純計算通りに16.7時間であなたは完成させられるでしょうか。
恐らく目標時間内に作業は終わらないため、安全マージンが必要になるでしょう。
慣れる事によって速度が向上していく可能性はありますが、多くの場合は反復作業が早々に飽きてしまい、入力時間がだんだん遅くなります。
またあなたは単純作業によって想像以上に疲れますので、適度な休憩を挟むべきです。
これは単純な例ですが、往々にして「1人日＝1日間」として計算されることに根本的な問題を抱えています。
急な会議や差込業務などの悲劇によって計画が崩れてしまったり、作業速度が一定ではない可能性も考慮するべきなのです。
適切な安全マージンを設定し、工数を日数ではなく作業可能な時間枠にプロットするようなマネジメントが必要不可欠です。
「安全マージン率をどうするか」というと理解しづらいかもしれませんので、1日あたりの作業時間を6～7時間のように余裕をもたせるのが良いでしょう。

また、安全マージンは総じて受注者の「心理的安全性」を確保する目的で非常に重要です。
作業に余裕があれば見返す時間もできますし、ゆとりを持った作業は不具合やミスが発生しづらい環境であるといえます。

=== 発注者から見た安全マージン

発注者側から安全マージンをみた場合、どのような印象を受けるでしょう。
もしかしたら金銭的な問題から「もったいない」と感じる方もいらっしゃるように思います。
しかし、発注者にとって、もっとも重要なのはビジネスの成功ではないでしょうか。
受注者は時間的余裕がなければ何かを省略せざるを得ません。
一部機能を省略する可能性もありますし、テストやドキュメントが不十分なまま進むかもしれません。
納期遅延はビジネスとして致命的な問題となり得ますので、このように受発注者双方とも納期の為に何かを犠牲にしようとします。
発注者側から必要以上に低い見積もりを要求した場合、納期遅延の可能性があるのみでなく、品質にも影響する可能性があるのです。

発注者として見積もりを確認する際は、ある程度の安全マージンを許容したうえで「本当にこの工数で要求通りすべて作りきれるか」という部分をしっかり精査してください。
もし見積もられた工数が想像以上に多く感じるようであれば、どれ位の安全マージンを取っているのかを一度聞いてみるのがよいでしょう。
親切な受注者であれば、開発項目ごとにどんな理由でどれ位の安全マージンを乗せているのかを教えてもらえるかもしれません。

前節でも述べたとおり、発注者であるあなたが原因となり工数が増える可能性もあり、受発注者双方の改善努力によって見積もり結果は大きく変わります。

=== 安全マージンと利益

受注者が安全マージンを消費しきらずに作業完了した場合はどうなるでしょうか。
恐らく「受注者側が利益を得る」と考えられる方が多いはずです。
発注者から見ると「早く終わったんだったら他のこともやって欲しい」位は思うかもしれませんね。
ここで「利益」と考える時点で、工数見積もりの本質的な意味合いが崩れている事をお伝えしたいと思います。

安全マージンとは「心理的安全性に対する余裕時間」であり、受注者が早期に作業完了したからといってすべてを利益とするのは得策ではありません。
テストカバレッジ率の向上・リファクタリング・ドキュメンテーションなど、開発者は余裕を使って多くのアウトプットを生み出すでしょう。
たとえば、あなたが資格試験を受験することを考えてみてください。
試験中は回答し終わった後も部屋に残り、何回も問題を読み返して少しでも得点を稼ごうとしますよね。
また、次の業務をこなすための学習時間に充てるかもしれません。
早期完了した場合には品質向上など双方の利益が最大化するような行動を取るであろうという信頼関係があれば、双方にとって良い関係を構築できるはずです。

== 安全マージンと納期

さて、そろそろ本題に入りましょう。
受注者であるあなたがこれから取り組む業務の安全マージンをたとえば100時間設定した場合、どのような行動を取りますか。

私は確実に「@<b>{100時間めいっぱい遊ぶ}」と答えますね。
現にこの原稿も締切駆動で書いていますし、同じように納期ギリギリにならないと本気で頑張らない方が多いのではないでしょうか。
多かれ少なかれサボってしまったり、都合の良い他のタスクを優先させるかもしれません。
（ちなみに私はダークソウルというゲームが面白すぎて仕方ないことが敗因でした）

私のように「夏休みの宿題を最終日にまとめてやるタイプ」の方は、とにかくギリギリまでサボろうとしがちです。
安全マージンを持つ事によって気持ちがゆるみ、納期（締切）駆動になることが多くあると思いますので、次のようなアイデアを提案します。

=== 余裕を作らない

もしあなたがサボりがちな傾向にあるなら、@<b>{作業に余裕を作らない}事が肝要です。
シンプルな方法として、工数を見積もる際に「自分用の見積もり」と「他者に提示する見積もり」を分けて考えるのはいかがでしょうか。
そうすることで、あなたは作業を自分用の見積もりに記載された計画通り作業をする事ができます。
ここまで述べた通り、安全マージンは心理的安全性を担保するために設定されていますので、作業を後延ばしする理由にしてはなりません。

=== タスクを細分化する

あなたは必要以上にタスクを大きく捉えてしまい、現実逃避するような癖はありませんか。
もしそうだとしたら、工数を決める際にはタスクを@<b>{可能な限り細分化}し、ひとつずつ優先順位（※優先度ではなく）を決めましょう。
次に取り組むべき小さなタスクが明確になっていれば心理的ハードルが下がりますので、容易にタスクをこなし続ける事ができるでしょう。
最近はWebブラウザから使用可能なタスク管理ツールが充実していますので、もし導入されていないようでしたら試してみてください。
目標となる@<b>{次のタスク}を切らさないよう注意することで、集中して取り組むことができるようになり、作業遅延は減っていくはずです。

== まとめ

本章では、私の個人的な視点から、安全マージンの意味と使い方についてを考察しました。
ここまでで述べた通り、受発注者双方にとって、安全マージンは必要不可欠な存在です。
発注者にとっては、工数削減が不幸な結果をもたらす事を理解頂ければと思います。
受注者にとっては、安全マージンが作業を放置する理由や原因とならない事を（自戒を込めて）願います。
この本を手にとられる皆さんが、安全マージンにより余裕を持った開発を行い、素晴らしいプロダクトを世に出していく事を祈ります。
